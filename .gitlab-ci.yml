---
# This file is a template, and might need editing before it works on your project.
# Build JAVA applications using Apache Maven (http://maven.apache.org)
# For docker image tags see https://hub.docker.com/_/maven/
#
# For general lifecycle information see https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
# 
# This template will build and test your projects as well as create the documentation.
# 
# * Caches downloaded dependencies and plugins between invocation.
# * Does only verify merge requests but deploy built artifacts of the
#   master branch.
# * Shows how to use multiple jobs in test stage for verifying functionality
#   with multiple JDKs.
# * Uses site:stage to collect the documentation for multi-module projects.
# * Publishes the documentation for `master` branch.

variables:
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -s .deploy/settings.xml"

# Cache downloaded dependencies and plugins between builds.
cache:
  paths:
    - .m2/repository/

image: maven:3-jdk-8

# Validate merge requests using JDK8
validate:jdk8:
  stage: build
  script:
    - ./mvnw $MAVEN_CLI_OPTS test-compile

# Verify merge requests using JDK8
verify:jdk8:
  stage: test
  script:
    - ./mvnw $MAVEN_CLI_OPTS verify

.deploy:base: &deploy_base
  stage: deploy
  only:
    - tags

# Call mvn deploy to upload artifacts for tagged releases
deploy:openjdk:
  <<: *deploy_base
  script:
    - ./mvnw $MAVEN_CLI_OPTS deploy

# TODO Upload ACE artifacts to obj
